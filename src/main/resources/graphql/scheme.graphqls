scalar DateTime
scalar UUID

type Query {
    getAllUsers: [UserResponse]
    getUserById(id : UUID!): UserResponse
}

type Mutation {
    createUser(userCreateRequest: UserCreateRequest!) : UserResponse
    updateUser(userUpdateRequest: UserUpdateRequest!) : UserResponse
    deleteUser(id : UUID!) : Boolean
}

type Subscription {
    userStatusChanged : UserResponse
}

type UserResponse {
    id : UUID,
    createdAt: DateTime
    updatedAt: DateTime
    username: String
    firstName: String
    lastName: String
    mail: String
    role : Role
}

enum Role {
    ADMIN
    USER
}

input UserCreateRequest {
    username: String
    password: String
    firstName: String
    lastName: String
    mail: String
    role: Role
}

input UserUpdateRequest {
    id : UUID
    password: String
    firstName: String
    lastName: String
    mail : String
    role : Role
}